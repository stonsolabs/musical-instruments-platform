# Environment Variables Configuration
# For local development: Copy this to frontend/.env.local
# For Vercel production: Set these in your Vercel project environment variables
# For Render backend: Set backend variables in your Render service environment variables

# ===========================================
# FRONTEND ENVIRONMENT VARIABLES (Next.js)
# ===========================================

# API Configuration - CRITICAL!
# MUST include protocol (https:// or http://)
# For production: Set this to your Render backend URL (e.g., https://your-app.onrender.com)
# For development: Use http://localhost:8000
# WRONG: your-app.onrender.com
# CORRECT: https://your-app.onrender.com
NEXT_PUBLIC_API_URL=https://your-backend-app.onrender.com

# Google Analytics & Tag Manager
NEXT_PUBLIC_GA_ID=G-XXXXXXXXXX
NEXT_PUBLIC_GTM_ID=GTM-XXXXXXX

# ===========================================
# BACKEND ENVIRONMENT VARIABLES (FastAPI)
# ===========================================

# Database
DATABASE_URL=postgresql+asyncpg://user:password@host:port/database

# Redis Cache
REDIS_URL=redis://host:port

# Environment
ENVIRONMENT=production
DEBUG=false

# Domain Configuration
DOMAIN=getyourmusicgear.com
FRONTEND_URL=https://getyourmusicgear.com
BACKEND_URL=https://getyourmusicgear.com

# Security
SECRET_KEY=your-super-secret-key-here

# OpenAI (for AI features)
OPENAI_API_KEY=sk-your-openai-key

# Affiliate Programs
AMAZON_ASSOCIATE_TAG=your-amazon-tag
THOMANN_AFFILIATE_ID=your-thomann-id

# ===========================================
# DEPLOYMENT SETUP INSTRUCTIONS
# ===========================================

# VERCEL FRONTEND SETUP:
# 1. Connect your GitHub repo to Vercel
# 2. Set the root directory to "frontend"
# 3. In Environment Variables, add:
#    - NEXT_PUBLIC_API_URL (your Render backend URL)
#    - NEXT_PUBLIC_GA_ID
#    - NEXT_PUBLIC_GTM_ID

# RENDER BACKEND SETUP:
# 1. Create a new Web Service on Render.com
# 2. Connect your GitHub repo
# 3. Use the render.yaml configuration
# 4. Add these environment variable groups:
#    - backend_vars (with all backend variables listed above)
# 5. Add PostgreSQL and Redis services if needed
